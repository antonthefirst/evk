a write buffer for compute shader, for stats and site info.
copy that buffer to host visible memory (potentially double buffered) and then copy that to host
a read/write buffer for compute control. a way to zero it from cpu side (maybe easiest with dispatch) and a way to read/write from it (just regular barriers i think).

actually there is just 1 compute shader, and it's called multiple times back to back. this is done to avoid switching programs. keep doing it this way for now, but maybe it's not such a big deal in vulkan (and more can be gained by setting buffers to be read/write only and removing some of the fencing or somesuch...

uniforms are all same, except for setting the "stage" (doesn't matter for now, just need a decent way to set uniforms i think)

somewhat ideally, i can in the future just run the update pass on the compute queue, many many times, and not actually render it or block on it.